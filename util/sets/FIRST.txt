FIRST(program) = {void, ε, int}
FIRST(declaration_list) = {void, ε, int}
FIRST(declaration) = {void, int}
FIRST(declaration') = {[, ;, (}
FIRST(var_declaration) = {int}
FIRST(var_declaration') = {[, ;}
FIRST(params) = {void, int}
FIRST(param_list) = {ε, ,}
FIRST(param) = {int}
FIRST(param') = {[, ε}
FIRST(compound_stmt) = {{}
FIRST(local_declarations) = {ε, int}
FIRST(statement_list) = {if, while, return, input, ε, output, ID, {}
FIRST(statement) = {if, while, return, input, output, ID, {}
FIRST(statement') = {[, ε, (}
FIRST(selection_stmt) = {else, ε}
FIRST(return_stmt) = {(, NUM, ;, ID}
FIRST(var) = {ID}
FIRST(var') = {[}
FIRST(expression) = {(, NUM, ID}
FIRST(expression') = {!=, >, ==, <, <=, >=, ε}
FIRST(relop) = {>=, !=, >, ==, <=, <}
FIRST(arithmetic_expression) = {(, NUM, ID}
FIRST(arithmetic_expression') = {-, +, ε}
FIRST(addop) = {-, +}
FIRST(term) = {(, NUM, ID}
FIRST(term') = {*, ε, /}
FIRST(mulop) = {*, /}
FIRST(factor) = {(, NUM, ID}
FIRST(factor') = {[, ε, (}
FIRST(call) = {)}
FIRST(args) = {(, NUM, ID}
FIRST(args_list) = {ε, ,}
