FIRST(program) = {ε, int, void}
FIRST(declaration_list) = {ε, int, void}
FIRST(declaration) = {int, void}
FIRST(declaration') = {(, [, ;}
FIRST(var_declaration) = {int}
FIRST(var_declaration') = {[, ;}
FIRST(params) = {int, void}
FIRST(param_list) = {ε, ,}
FIRST(param) = {int}
FIRST(param') = {ε, [}
FIRST(compound_stmt) = {{}
FIRST(local_declarations) = {ε, int}
FIRST(statement_list) = {return, input, ID, if, while, {, ε, output}
FIRST(statement) = {return, if, {, output, input, ID, while}
FIRST(statement') = {ε, (, [}
FIRST(selection_stmt) = {ε, else}
FIRST(return_stmt) = {NUM, ID, (, ;}
FIRST(var) = {ID}
FIRST(var') = {[}
FIRST(expression) = {NUM, ID, (}
FIRST(expression') = {<, >, >=, ε, <=, !=, ==}
FIRST(relop) = {<, <=, >=, >, !=, ==}
FIRST(arithmetic_expression) = {NUM, ID, (}
FIRST(arithmetic_expression') = {-, +, ε}
FIRST(addop) = {-, +}
FIRST(term) = {NUM, ID, (}
FIRST(term') = {ε, *, /}
FIRST(mulop) = {*, /}
FIRST(factor) = {NUM, ID, (}
FIRST(factor') = {ε, (, [}
FIRST(call) = {)}
FIRST(args) = {NUM, ID, (}
FIRST(args_list) = {ε, ,}
